import React, { useState } from 'react'

const NutritionCalculator = () => {
  const [formData, setFormData] = useState({
    age: '',
    gender: 'male',
    weight: '',
    height: '',
    activity: 'sedentary',
    goal: 'maintain'
  })
  
  const [results, setResults] = useState(null)

  const activityLevels = {
    sedentary: { name: '‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô/‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏¢', multiplier: 1.2 },
    light: { name: '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏ö‡∏≤ ‡πÜ 1-3 ‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', multiplier: 1.375 },
    moderate: { name: '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á 3-5 ‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', multiplier: 1.55 },
    active: { name: '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏Å 6-7 ‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå', multiplier: 1.725 },
    very_active: { name: '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏Å‡∏°‡∏≤‡∏Å/‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡πÅ‡∏£‡∏á', multiplier: 1.9 }
  }

  const goals = {
    lose: { name: '‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å', adjustment: -500 },
    maintain: { name: '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å', adjustment: 0 },
    gain: { name: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å', adjustment: 500 }
  }

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    })
  }

  const calculateNutrition = () => {
    const { age, gender, weight, height, activity, goal } = formData
    
    if (!age || !weight || !height) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô')
      return
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMR (Basal Metabolic Rate)
    let bmr
    if (gender === 'male') {
      bmr = 88.362 + (13.397 * parseFloat(weight)) + (4.799 * parseFloat(height)) - (5.677 * parseFloat(age))
    } else {
      bmr = 447.593 + (9.247 * parseFloat(weight)) + (3.098 * parseFloat(height)) - (4.330 * parseFloat(age))
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì TDEE (Total Daily Energy Expenditure)
    const tdee = bmr * activityLevels[activity].multiplier
    
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    const dailyCalories = tdee + goals[goal].adjustment

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI
    const heightInMeters = parseFloat(height) / 100
    const bmi = parseFloat(weight) / (heightInMeters * heightInMeters)

    // ‡πÅ‡∏ö‡πà‡∏á‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
    const protein = (dailyCalories * 0.25) / 4 // 25% ‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô (4 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà/‡∏Å‡∏£‡∏±‡∏°)
    const carbs = (dailyCalories * 0.45) / 4   // 45% ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≤‡∏£‡πå‡πÇ‡∏ö‡πÑ‡∏´‡πÄ‡∏î‡∏£‡∏ï (4 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà/‡∏Å‡∏£‡∏±‡∏°)
    const fats = (dailyCalories * 0.30) / 9    // 30% ‡∏à‡∏≤‡∏Å‡πÑ‡∏Ç‡∏°‡∏±‡∏ô (9 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà/‡∏Å‡∏£‡∏±‡∏°)

    // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥
    const waterNeeds = parseFloat(weight) * 35 // 35ml ‡∏ï‡πà‡∏≠‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°

    setResults({
      bmr: Math.round(bmr),
      tdee: Math.round(tdee),
      dailyCalories: Math.round(dailyCalories),
      bmi: bmi.toFixed(1),
      protein: Math.round(protein),
      carbs: Math.round(carbs),
      fats: Math.round(fats),
      water: Math.round(waterNeeds)
    })
  }

  const getBMIStatus = (bmi) => {
    if (bmi < 18.5) return { status: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ô‡πâ‡∏≠‡∏¢', color: 'text-blue-600' }
    if (bmi < 25) return { status: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏õ‡∏Å‡∏ï‡∏¥', color: 'text-green-600' }
    if (bmi < 30) return { status: '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô', color: 'text-yellow-600' }
    return { status: '‡∏≠‡πâ‡∏ß‡∏ô', color: 'text-red-600' }
  }

  const ageGroups = [
    { label: '‡πÄ‡∏î‡πá‡∏Å (2-12 ‡∏õ‡∏µ)', min: 2, max: 12 },
    { label: '‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô (13-19 ‡∏õ‡∏µ)', min: 13, max: 19 },
    { label: '‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà (20-64 ‡∏õ‡∏µ)', min: 20, max: 64 },
    { label: '‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ (65+ ‡∏õ‡∏µ)', min: 65, max: 120 }
  ]

  return (
    <div className="max-w-4xl mx-auto">
      <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">
          üßÆ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
        </h2>
        
        <div className="grid md:grid-cols-2 gap-6">
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)
              </label>
              <input
                type="number"
                name="age"
                value={formData.age}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡πÄ‡∏û‡∏®
              </label>
              <select
                name="gender"
                value={formData.gender}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                <option value="male">‡∏ä‡∏≤‡∏¢</option>
                <option value="female">‡∏´‡∏ç‡∏¥‡∏á</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°)
              </label>
              <input
                type="number"
                name="weight"
                value={formData.weight}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á (‡πÄ‡∏ã‡∏ô‡∏ï‡∏¥‡πÄ‡∏°‡∏ï‡∏£)
              </label>
              <input
                type="number"
                name="height"
                value={formData.height}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á"
              />
            </div>
          </div>

          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢
              </label>
              <select
                name="activity"
                value={formData.activity}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                {Object.entries(activityLevels).map(([key, value]) => (
                  <option key={key} value={key}>{value.name}</option>
                ))}
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
              </label>
              <select
                name="goal"
                value={formData.goal}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                {Object.entries(goals).map(([key, value]) => (
                  <option key={key} value={key}>{value.name}</option>
                ))}
              </select>
            </div>

            <button
              onClick={calculateNutrition}
              className="w-full bg-green-600 text-white py-3 px-4 rounded-md font-medium hover:bg-green-700 transition-colors"
            >
              ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
            </button>
          </div>
        </div>
      </div>

      {results && (
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h3 className="text-xl font-bold text-gray-800 mb-6 text-center">
            üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
          </h3>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            <div className="bg-blue-50 p-4 rounded-lg text-center">
              <div className="text-2xl font-bold text-blue-600">{results.dailyCalories}</div>
              <div className="text-sm text-gray-600">‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà/‡∏ß‡∏±‡∏ô</div>
            </div>
            
            <div className="bg-green-50 p-4 rounded-lg text-center">
              <div className={`text-2xl font-bold ${getBMIStatus(results.bmi).color}`}>
                {results.bmi}
              </div>
              <div className="text-sm text-gray-600">BMI</div>
              <div className={`text-xs ${getBMIStatus(results.bmi).color}`}>
                {getBMIStatus(results.bmi).status}
              </div>
            </div>
            
            <div className="bg-yellow-50 p-4 rounded-lg text-center">
              <div className="text-2xl font-bold text-yellow-600">{results.bmr}</div>
              <div className="text-sm text-gray-600">BMR</div>
            </div>
            
            <div className="bg-cyan-50 p-4 rounded-lg text-center">
              <div className="text-2xl font-bold text-cyan-600">{results.water}</div>
              <div className="text-sm text-gray-600">‡∏°‡∏•. ‡∏ô‡πâ‡∏≥/‡∏ß‡∏±‡∏ô</div>
            </div>
          </div>

          <div className="grid md:grid-cols-3 gap-4">
            <div className="bg-red-50 p-4 rounded-lg">
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium text-gray-700">‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô</span>
                <span className="text-lg font-bold text-red-600">{results.protein}g</span>
              </div>
              <div className="text-xs text-gray-500 mt-1">25% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏£‡∏ß‡∏°</div>
            </div>
            
            <div className="bg-orange-50 p-4 rounded-lg">
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium text-gray-700">‡∏Ñ‡∏≤‡∏£‡πå‡πÇ‡∏ö‡πÑ‡∏´‡πÄ‡∏î‡∏£‡∏ï</span>
                <span className="text-lg font-bold text-orange-600">{results.carbs}g</span>
              </div>
              <div className="text-xs text-gray-500 mt-1">45% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏£‡∏ß‡∏°</div>
            </div>
            
            <div className="bg-purple-50 p-4 rounded-lg">
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium text-gray-700">‡πÑ‡∏Ç‡∏°‡∏±‡∏ô</span>
                <span className="text-lg font-bold text-purple-600">{results.fats}g</span>
              </div>
              <div className="text-xs text-gray-500 mt-1">30% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏£‡∏ß‡∏°</div>
            </div>
          </div>

          <div className="mt-6 p-4 bg-gray-50 rounded-lg">
            <h4 className="font-medium text-gray-800 mb-2">üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h4>
            <ul className="text-sm text-gray-600 space-y-1">
              <li>‚Ä¢ ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ {Math.round(results.water/250)} ‡πÅ‡∏Å‡πâ‡∏ß ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô</li>
              <li>‚Ä¢ ‡πÅ‡∏ö‡πà‡∏á‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏°‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏•‡∏∞ 2 ‡∏°‡∏∑‡πâ‡∏≠‡∏ß‡πà‡∏≤‡∏á</li>
              <li>‚Ä¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢</li>
              <li>‚Ä¢ ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏ú‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 5 ‡∏™‡πà‡∏ß‡∏ô</li>
              <li>‚Ä¢ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÅ‡∏•‡∏∞‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡πå</li>
            </ul>
          </div>
        </div>
      )}
    </div>
  )
}

export default NutritionCalculator
