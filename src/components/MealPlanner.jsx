import React, { useState } from 'react'

const MealPlanner = () => {
  const [selectedDay, setSelectedDay] = useState('monday')
  const [ageGroup, setAgeGroup] = useState('adult')
  
  const days = {
    monday: '‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
    tuesday: '‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£', 
    wednesday: '‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò',
    thursday: '‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ',
    friday: '‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå',
    saturday: '‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå',
    sunday: '‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå'
  }

  const ageGroups = {
    child: '‡πÄ‡∏î‡πá‡∏Å (2-12 ‡∏õ‡∏µ)',
    teen: '‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô (13-19 ‡∏õ‡∏µ)',
    adult: '‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà (20-64 ‡∏õ‡∏µ)',
    elderly: '‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ (65+ ‡∏õ‡∏µ)'
  }

  const mealPlans = {
    child: {
      monday: {
        breakfast: {
          menu: '‡πÇ‡∏à‡πä‡∏Å‡πÑ‡∏Å‡πà‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏° + ‡∏ô‡∏°‡∏™‡∏î',
          calories: 350,
          description: '‡πÇ‡∏à‡πä‡∏Å‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏°‡∏Å‡∏±‡∏ö‡πÑ‡∏Å‡πà‡∏™‡∏±‡∏ö ‡∏ú‡∏±‡∏Å‡πÅ‡∏Ñ‡∏£‡∏≠‡∏ó ‡∏ö‡∏£‡πá‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏•‡∏µ'
        },
        lunch: {
          menu: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á + ‡∏õ‡∏•‡∏≤‡∏ô‡∏∂‡πà‡∏á‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß + ‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°',
          calories: 450,
          description: '‡∏õ‡∏•‡∏≤‡∏Å‡∏∞‡∏û‡∏á‡∏ô‡∏∂‡πà‡∏á‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß ‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏Ñ‡∏∞‡∏ô‡πâ‡∏≤ ‡πÅ‡∏Ñ‡∏£‡∏≠‡∏ó'
        },
        snack: {
          menu: '‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏£‡∏ß‡∏° + ‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï',
          calories: 150,
          description: '‡∏Å‡∏•‡πâ‡∏ß‡∏¢ ‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏• ‡∏Å‡∏±‡∏ö‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•'
        },
        dinner: {
          menu: '‡∏ã‡∏∏‡∏õ‡∏ú‡∏±‡∏Å + ‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡πÇ‡∏Æ‡∏•‡∏ß‡∏µ‡∏ó',
          calories: 300,
          description: '‡∏ã‡∏∏‡∏õ‡∏ú‡∏±‡∏Å‡πÉ‡∏™‡πà‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ ‡∏Å‡∏±‡∏ö‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡πÇ‡∏Æ‡∏•‡∏ß‡∏µ‡∏ó'
        }
      }
    },
    teen: {
      monday: {
        breakfast: {
          menu: '‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏≠‡πä‡∏ï + ‡∏Å‡∏•‡πâ‡∏ß‡∏¢ + ‡∏≠‡∏±‡∏•‡∏°‡∏≠‡∏ô‡∏î‡πå',
          calories: 400,
          description: '‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏≠‡πä‡∏ï‡∏´‡∏∏‡∏á‡∏ô‡∏° ‡πÉ‡∏™‡πà‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏´‡∏±‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏•‡∏°‡∏≠‡∏ô‡∏î‡πå‡∏™‡∏±‡∏ö'
        },
        lunch: {
          menu: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á + ‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á + ‡∏™‡∏•‡∏±‡∏î‡∏ú‡∏±‡∏Å',
          calories: 600,
          description: '‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏® ‡∏™‡∏•‡∏±‡∏î‡∏ú‡∏±‡∏Å‡πÉ‡∏™‡πà‡∏ô‡πâ‡∏≥‡∏™‡∏•‡∏±‡∏î‡∏ô‡πâ‡∏≠‡∏¢'
        },
        snack: {
          menu: '‡∏™‡∏°‡∏π‡∏ó‡∏ï‡∏µ‡πâ‡∏ú‡∏±‡∏Å‡∏ú‡∏•‡πÑ‡∏°‡πâ',
          calories: 200,
          description: '‡∏ú‡∏™‡∏°‡∏ú‡∏±‡∏Å‡πÇ‡∏Ç‡∏° ‡∏Å‡∏•‡πâ‡∏ß‡∏¢ ‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á ‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏á'
        },
        dinner: {
          menu: '‡∏Ñ‡∏ß‡∏¥‡∏ô‡∏±‡∏ß + ‡∏õ‡∏•‡∏≤‡πÅ‡∏ã‡∏•‡∏°‡∏≠‡∏ô + ‡∏ú‡∏±‡∏Å‡∏ô‡∏∂‡πà‡∏á',
          calories: 550,
          description: '‡∏õ‡∏•‡∏≤‡πÅ‡∏ã‡∏•‡∏°‡∏≠‡∏ô‡∏õ‡∏¥‡πâ‡∏á ‡∏Ñ‡∏ß‡∏¥‡∏ô‡∏±‡∏ß‡∏ï‡πâ‡∏° ‡∏ö‡∏£‡πá‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏•‡∏µ‡∏ô‡∏∂‡πà‡∏á'
        }
      }
    },
    adult: {
      monday: {
        breakfast: {
          menu: '‡πÇ‡∏≠‡πä‡∏ï‡∏°‡∏µ‡∏• + ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà + ‡πÄ‡∏°‡∏•‡πá‡∏î‡πÄ‡∏à‡∏µ‡∏¢',
          calories: 350,
          description: '‡πÇ‡∏≠‡πä‡∏ï‡∏°‡∏µ‡∏•‡∏´‡∏∏‡∏á‡∏ô‡∏°‡∏≠‡∏±‡∏•‡∏°‡∏≠‡∏ô‡∏î‡πå ‡πÉ‡∏™‡πà‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà ‡πÄ‡∏°‡∏•‡πá‡∏î‡πÄ‡∏à‡∏µ‡∏¢'
        },
        lunch: {
          menu: '‡∏™‡∏•‡∏±‡∏î‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô + ‡∏≠‡∏≤‡πÇ‡∏ß‡∏Ñ‡∏≤‡πÇ‡∏î',
          calories: 500,
          description: '‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á ‡∏ú‡∏±‡∏Å‡πÉ‡∏ö‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß ‡∏≠‡∏≤‡πÇ‡∏ß‡∏Ñ‡∏≤‡πÇ‡∏î ‡∏ñ‡∏±‡πà‡∏ß‡∏ä‡∏¥‡∏Ñ‡∏û‡∏µ ‡∏ô‡πâ‡∏≥‡∏™‡∏•‡∏±‡∏î‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï'
        },
        snack: {
          menu: '‡∏Å‡∏£‡∏µ‡∏Å‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï + ‡∏ñ‡∏±‡πà‡∏ß‡∏ú‡∏™‡∏°',
          calories: 180,
          description: '‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï‡∏Å‡∏£‡∏µ‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡∏ñ‡∏±‡πà‡∏ß‡∏£‡∏ß‡∏°‡∏Ñ‡∏±‡πà‡∏ß'
        },
        dinner: {
          menu: '‡∏õ‡∏•‡∏≤‡∏ô‡∏∂‡πà‡∏á + ‡∏ú‡∏±‡∏Å‡πÇ‡∏Ç‡∏°‡∏ú‡∏±‡∏î + ‡∏°‡∏±‡∏ô‡πÄ‡∏ó‡∏®‡∏¢‡πà‡∏≤‡∏á',
          calories: 450,
          description: '‡∏õ‡∏•‡∏≤‡∏Å‡∏∞‡∏û‡∏á‡∏ô‡∏∂‡πà‡∏á‡∏°‡∏∞‡∏ô‡∏≤‡∏ß ‡∏ú‡∏±‡∏Å‡πÇ‡∏Ç‡∏°‡∏ú‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏° ‡∏°‡∏±‡∏ô‡πÄ‡∏ó‡∏®‡∏¢‡πà‡∏≤‡∏á'
        }
      },
      tuesday: {
        breakfast: {
          menu: '‡πÑ‡∏Ç‡πà‡∏ï‡∏∏‡πã‡∏ô + ‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡πÇ‡∏Æ‡∏•‡∏ß‡∏µ‡∏ó + ‡∏≠‡∏≤‡πÇ‡∏ß‡∏Ñ‡∏≤‡πÇ‡∏î',
          calories: 380,
          description: '‡πÑ‡∏Ç‡πà‡∏ï‡∏∏‡πã‡∏ô‡πÉ‡∏™‡πà‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏° ‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡πÇ‡∏Æ‡∏•‡∏ß‡∏µ‡∏ó ‡∏≠‡∏≤‡πÇ‡∏ß‡∏Ñ‡∏≤‡πÇ‡∏î‡πÅ‡∏°‡∏ä'
        },
        lunch: {
          menu: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á + ‡πÅ‡∏Å‡∏á‡πÄ‡∏à‡∏∑‡∏≠‡∏â‡πà‡∏≤‡∏¢',
          calories: 480,
          description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á ‡πÅ‡∏Å‡∏á‡πÄ‡∏à‡∏∑‡∏≠‡∏â‡πà‡∏≤‡∏¢‡πÉ‡∏™‡πà‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ ‡∏Å‡∏∏‡πâ‡∏á'
        },
        snack: {
          menu: '‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ï‡∏≤‡∏°‡∏§‡∏î‡∏π‡∏Å‡∏≤‡∏•',
          calories: 120,
          description: '‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏• ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡πâ‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏∞‡∏•‡∏∞‡∏Å‡∏≠'
        },
        dinner: {
          menu: '‡∏ã‡∏∏‡∏õ‡∏°‡∏¥‡πÇ‡∏ã‡∏∞ + ‡∏õ‡∏•‡∏≤‡∏¢‡πà‡∏≤‡∏á + ‡∏ú‡∏±‡∏Å‡∏ï‡πâ‡∏°',
          calories: 420,
          description: '‡∏ã‡∏∏‡∏õ‡∏°‡∏¥‡πÇ‡∏ã‡∏∞‡πÉ‡∏™‡πà‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ ‡∏õ‡∏•‡∏≤‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏® ‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°‡∏ï‡πâ‡∏°'
        }
      }
    },
    elderly: {
      monday: {
        breakfast: {
          menu: '‡πÇ‡∏à‡πä‡∏Å‡∏õ‡∏•‡∏≤ + ‡∏ú‡∏±‡∏Å‡∏ï‡πâ‡∏°',
          calories: 280,
          description: '‡πÇ‡∏à‡πä‡∏Å‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏°‡∏õ‡∏•‡∏≤‡∏™‡∏±‡∏ö ‡∏ú‡∏±‡∏Å‡πÇ‡∏Ç‡∏° ‡πÅ‡∏Ñ‡∏£‡∏≠‡∏ó'
        },
        lunch: {
          menu: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ô‡∏¥‡πà‡∏° + ‡πÑ‡∏Å‡πà‡∏ï‡πâ‡∏° + ‡πÅ‡∏Å‡∏á‡∏ú‡∏±‡∏Å',
          calories: 400,
          description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏∏‡∏á‡∏ô‡∏¥‡πà‡∏° ‡πÑ‡∏Å‡πà‡∏ï‡πâ‡∏°‡∏¢‡∏≥ ‡πÅ‡∏Å‡∏á‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°‡πÉ‡∏™‡πà‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ'
        },
        snack: {
          menu: '‡∏ô‡∏°‡∏ñ‡∏±‡πà‡∏ß‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á + ‡∏ö‡∏¥‡∏™‡∏Å‡∏¥‡∏ï‡πÑ‡∏ü‡πÄ‡∏ö‡∏≠‡∏£‡πå',
          calories: 150,
          description: '‡∏ô‡∏°‡∏ñ‡∏±‡πà‡∏ß‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡∏ö‡∏¥‡∏™‡∏Å‡∏¥‡∏ï‡πÇ‡∏Æ‡∏•‡∏ß‡∏µ‡∏ó'
        },
        dinner: {
          menu: '‡∏õ‡∏•‡∏≤‡∏ô‡∏∂‡πà‡∏á + ‡∏ú‡∏±‡∏Å‡∏ï‡πâ‡∏°‡∏≠‡πà‡∏≠‡∏ô',
          calories: 320,
          description: '‡∏õ‡∏•‡∏≤‡∏ô‡∏∂‡πà‡∏á‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß‡∏Ç‡∏≤‡∏ß ‡∏ú‡∏±‡∏Å‡∏ï‡πâ‡∏°‡∏≠‡πà‡∏≠‡∏ô ‡πÜ'
        }
      }
    }
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö demo)
  const generateWeekPlan = (basePlan) => {
    const variations = [
      { breakfast: '‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏£‡∏ß‡∏° + ‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï', lunch: '‡∏™‡∏•‡∏±‡∏î‡∏ó‡∏π‡∏ô‡πà‡∏≤', dinner: '‡πÅ‡∏Å‡∏á‡∏™‡πâ‡∏°‡∏ú‡∏±‡∏Å' },
      { breakfast: '‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á + ‡πÑ‡∏Ç‡πà‡∏•‡∏ß‡∏Å', lunch: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å', dinner: '‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°' },
      { breakfast: '‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏´‡∏≠‡∏° + ‡∏ô‡∏°', lunch: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏õ‡∏•‡∏≤', dinner: '‡∏õ‡∏•‡∏≤‡∏õ‡∏¥‡πâ‡∏á' },
      { breakfast: '‡πÄ‡∏ã‡πÄ‡∏£‡∏µ‡∏¢‡∏• + ‡∏ú‡∏•‡πÑ‡∏°‡πâ', lunch: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤', dinner: '‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô' },
      { breakfast: '‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß + ‡∏Ç‡πâ‡∏≤‡∏ß', lunch: '‡∏ú‡∏±‡∏î‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß', dinner: '‡∏•‡∏≤‡∏ö‡∏õ‡∏•‡∏≤' },
      { breakfast: '‡πÇ‡∏≠‡πä‡∏ï + ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà', lunch: '‡∏™‡∏•‡∏±‡∏î‡πÑ‡∏Å‡πà', dinner: '‡∏ã‡∏∏‡∏õ‡∏ú‡∏±‡∏Å' }
    ]
    
    const weekPlan = { monday: basePlan }
    const dayKeys = Object.keys(days).slice(1)
    
    dayKeys.forEach((day, index) => {
      weekPlan[day] = {
        breakfast: { ...basePlan.breakfast, menu: variations[index].breakfast },
        lunch: { ...basePlan.lunch, menu: variations[index].lunch },
        snack: basePlan.snack,
        dinner: { ...basePlan.dinner, menu: variations[index].dinner }
      }
    })
    
    return weekPlan
  }

  const currentPlan = mealPlans[ageGroup] || { monday: mealPlans.adult.monday }
  const weekPlan = generateWeekPlan(currentPlan.monday)
  const todayMeals = weekPlan[selectedDay] || weekPlan.monday

  const MealCard = ({ mealType, meal, icon }) => (
    <div className="bg-white rounded-lg shadow-md p-4">
      <div className="flex items-center justify-between mb-3">
        <h3 className="font-semibold text-gray-800 flex items-center">
          <span className="text-xl mr-2">{icon}</span>
          {mealType}
        </h3>
        <span className="bg-blue-100 text-blue-800 text-sm px-2 py-1 rounded">
          {meal.calories} cal
        </span>
      </div>
      <h4 className="font-medium text-gray-700 mb-2">{meal.menu}</h4>
      <p className="text-sm text-gray-600">{meal.description}</p>
    </div>
  )

  const totalCalories = todayMeals.breakfast?.calories + todayMeals.lunch?.calories + todayMeals.snack?.calories + todayMeals.dinner?.calories

  return (
    <div className="max-w-4xl mx-auto">
      <div className="text-center mb-8">
        <h2 className="text-3xl font-bold text-gray-800 mb-4">
          üìÖ ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£
        </h2>
        <p className="text-gray-600">
          ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢
        </p>
      </div>

      {/* Controls */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-8">
        <div className="grid md:grid-cols-2 gap-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢
            </label>
            <select
              value={ageGroup}
              onChange={(e) => setAgeGroup(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 bg-white text-green-900 placeholder:text-green-700"
            >
              {Object.entries(ageGroups).map(([key, value]) => (
                <option key={key} value={key}>{value}</option>
              ))}
            </select>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            </label>
            <select
              value={selectedDay}
              onChange={(e) => setSelectedDay(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 bg-white text-green-900 placeholder:text-green-700"
            >
              {Object.entries(days).map(([key, value]) => (
                <option key={key} value={key}>{value}</option>
              ))}
            </select>
          </div>
        </div>
      </div>

      {/* Daily Summary */}
      <div className="bg-gradient-to-r from-green-100 to-blue-100 rounded-lg p-6 mb-8">
        <div className="text-center">
          <h3 className="text-xl font-bold text-gray-800 mb-2">
            {days[selectedDay]} - {ageGroups[ageGroup]}
          </h3>
          <div className="text-3xl font-bold text-green-600">
            {totalCalories} ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
          </div>
          <p className="text-sm text-gray-600 mt-2">‡∏£‡∏ß‡∏°‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô</p>
        </div>
      </div>

      {/* Meal Cards */}
      <div className="grid md:grid-cols-2 gap-6 mb-8">
        <MealCard
          mealType="‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡πâ‡∏≤"
          meal={todayMeals.breakfast}
          icon="üåÖ"
        />
        <MealCard
          mealType="‡∏°‡∏∑‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô"
          meal={todayMeals.lunch}
          icon="‚òÄÔ∏è"
        />
        <MealCard
          mealType="‡∏°‡∏∑‡πâ‡∏≠‡∏ß‡πà‡∏≤‡∏á"
          meal={todayMeals.snack}
          icon="üçé"
        />
        <MealCard
          mealType="‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡πá‡∏ô" 
          meal={todayMeals.dinner} 
          icon="üåô"
        />
      </div>

      {/* Weekly Overview */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-8">
        <h3 className="text-lg font-bold text-gray-800 mb-4">
          üìä ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
        </h3>
        <div className="grid grid-cols-7 gap-2">
          {Object.entries(days).map(([dayKey, dayName]) => (
            <button
              key={dayKey}
              onClick={() => setSelectedDay(dayKey)}
              className={`p-3 rounded-lg text-center transition-colors ${
                selectedDay === dayKey
                  ? 'bg-green-500 text-white'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
              }`}
            >
              <div className="text-xs font-medium">{dayName}</div>
              <div className="text-sm mt-1">
                {weekPlan[dayKey]?.breakfast?.calories + weekPlan[dayKey]?.lunch?.calories + 
                 weekPlan[dayKey]?.snack?.calories + weekPlan[dayKey]?.dinner?.calories || totalCalories}
              </div>
              <div className="text-xs text-gray-500">cal</div>
            </button>
          ))}
        </div>
      </div>

      {/* Tips Section */}
      <div className="bg-gradient-to-r from-orange-50 to-red-50 rounded-lg p-6">
        <h3 className="text-lg font-bold text-gray-800 mb-4 text-center">
          üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£
        </h3>
        
        <div className="grid md:grid-cols-3 gap-4">
          <div className="bg-white p-4 rounded-lg">
            <div className="text-2xl mb-2">‚è∞</div>
            <h4 className="font-medium mb-2">‡∏Å‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤</h4>
            <p className="text-sm text-gray-600">
              ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ ‡∏´‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô 3-4 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
            </p>
          </div>
          
          <div className="bg-white p-4 rounded-lg">
            <div className="text-2xl mb-2">üçΩÔ∏è</div>
            <h4 className="font-medium mb-2">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°</h4>
            <p className="text-sm text-gray-600">
              ‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏à‡∏≤‡∏ô = ‡∏ú‡∏±‡∏Å, ¬º = ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô, ¬º = ‡∏Ñ‡∏≤‡∏£‡πå‡πÇ‡∏ö‡πÑ‡∏´‡πÄ‡∏î‡∏£‡∏ï
            </p>
          </div>
          
          <div className="bg-white p-4 rounded-lg">
            <div className="text-2xl mb-2">ü•§</div>
            <h4 className="font-medium mb-2">‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠</h4>
            <p className="text-sm text-gray-600">
              ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏°‡∏∑‡πâ‡∏≠ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏´‡∏ß‡∏≤‡∏ô
            </p>
          </div>
        </div>

        <div className="mt-6 bg-white p-4 rounded-lg">
          <h4 className="font-medium text-gray-800 mb-2">üéØ ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢:</h4>
          <ul className="text-sm text-gray-600 space-y-1">
            <li><strong>‡πÄ‡∏î‡πá‡∏Å:</strong> ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Ñ‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏°‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï</li>
            <li><strong>‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô:</strong> ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</li>
            <li><strong>‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà:</strong> ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏£‡∏Ñ‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á</li>
            <li><strong>‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏:</strong> ‡πÄ‡∏ô‡πâ‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡∏∏‡πà‡∏° ‡∏¢‡πà‡∏≠‡∏¢‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</li>
          </ul>
        </div>
      </div>
    </div>
  )
}

export default MealPlanner
